version: '2'
services:
  # postgres is used to store e.g. user accounts, roles,
  # data displayed in the webpage
  postgres:
    build: ./openease_postgres
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=docker

  # a volume that holds CSS code
  openease_css:
    build: ./openease_css
    volumes:
      - openease_css:/opt/webapp/webrob/static/css

  # a volume that holds JS code
  openease_core:
    build: ./openease_js
    volumes:
      - openease_core:/opt/webapp/webrob/static/lib

  # the openEASE flask webapp
  openease:
    build: ./openease_flask
    container_name: openease
    # NOTE: wait until postgres is available before calling runserver.py
    command: /opt/webapp/wait.sh postgres python /opt/webapp/runserver.py
    ports:
      - "5000:5000"
    links:
      - postgres
    volumes:
      - openease_core:/opt/webapp/webrob/static/lib
      - openease_css:/opt/webapp/webrob/static/css
    environment:
      # these are for docker-gen to recognize this container
      - VIRTUAL_HOST=openease
      - VIRTUAL_PORT=5000
      - EASE_DEBUG=false
      # Workaround for container using legacy Docker links
      - POSTGRES_PORT_5432_TCP_ADDR=postgres
      - POSTGRES_PORT_5432_TCP_PORT=5432
      - DOCKERBRIDGE_PORT_5001_TCP_ADDR=dockerbridge
      - DOCKERBRIDGE_PORT_5001_TCP_PORT=5001
      #
      - OPENEASE_ADMIN_PASSWORD=${OPENEASE_ADMIN_PASSWORD}
      - OPENEASE_MAIL_USERNAME=${OPENEASE_MAIL_USERNAME}
      - OPENEASE_MAIL_PASSWORD=${OPENEASE_MAIL_PASSWORD}
      - OPENEASE_MESHES=${OPENEASE_MESHES}
      - OPENEASE_ROS_DISTRIBUTION=${OPENEASE_ROS_DISTRIBUTION}
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_APP_SECRET=${GITHUB_APP_SECRET}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - TWITTER_APP_ID=${TWITTER_APP_ID}
      - TWITTER_APP_SECRET=${TWITTER_APP_SECRET}
      - GOOGLE_APP_SECRET=${GOOGLE_APP_SECRET}
      - GOOGLE_APP_ID=${GOOGLE_APP_ID}
volumes:
  # sql data volume
  postgres:
  # openEASE CSS code
  openease_css:
  # openEASE JS code
  openease_core:
